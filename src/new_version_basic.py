import requests
from concurrent.futures import ThreadPoolExecutor, as_completed
import sys
import time
import csv

def load_wordlist(file_path):
    with open(file_path, 'r') as file:
        return file.read().splitlines()

def check_url(base_url, path):
    url = f"{base_url}/{path}"
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            return url, True
    except requests.RequestException as e:
        print(f"Request Exception for {url}: {e}")
    return url, False

def write_to_csv(file_name, path, hit_rate, time_taken):
    with open(file_name, mode='a', newline='') as file:
        csv_writer = csv.writer(file)
        csv_writer.writerow([path, hit_rate, time_taken])

def recursive_directory_buster(base_url, current_path, wordlist_file, max_threads=10, found_paths=None, total_requests=0, successful_hits=0, start_time=time.time()):
    if found_paths is None:
        found_paths = []

    full_url = f"{base_url}/{current_path}".rstrip('/')
    wordlist = load_wordlist(wordlist_file)

    with ThreadPoolExecutor(max_workers=max_threads) as executor:
        future_to_path = {executor.submit(check_url, full_url, path): path for path in wordlist}
        for future in as_completed(future_to_path):
            url, success = future.result()
            total_requests += 1
            if success:
                successful_hits += 1
                current_hit_rate = (successful_hits / total_requests) * 100
                current_time_taken = time.time() - start_time
                full_path = f"{current_path}/{future_to_path[future]}".rstrip('/')
                found_paths.append(full_path)
                write_to_csv('results_standard.csv', full_path, current_hit_rate, current_time_taken)
                recursive_directory_buster(base_url, full_path, wordlist_file, max_threads, found_paths, total_requests, successful_hits, start_time)

    return found_paths, total_requests, successful_hits

if __name__ == "__main__":
    base_url = 'https://as.com'
    wordlist_file = 'docs/dirbusterListSmallTest.txt'

    start_time = time.time()
    found_paths, total_requests, successful_hits = recursive_directory_buster(base_url, '', wordlist_file)
    end_time = time.time()

    print(f"\nTotal Hit Rate: {successful_hits/total_requests * 100:.2f}%")
    print(f"Total Time Taken: {end_time - start_time:.2f} seconds")

#
# C:\Users\bp4922\PycharmProjects\pythonProject\venv\Scripts\python.exe C:\Users\bp4922\PycharmProjects\pythonProject\src\new_version_basic.py
# Hit Rate after finding /homepage: 0.78%
# Request Exception for https://as.com/s: HTTPSConnectionPool(host='as.com', port=443): Read timed out. (read timeout=5)
# Request Exception for https://as.com//homepage/list: HTTPSConnectionPool(host='as.com', port=443): Read timed out. (read timeout=5)
# Hit Rate after finding /baloncesto: 1.26%
# Request Exception for https://as.com//baloncesto/26: HTTPSConnectionPool(host='as.com', port=443): Read timed out. (read timeout=5)
# Hit Rate after finding /baloncesto/nba: 0.94%
# Request Exception for https://as.com//baloncesto/baloncesto: HTTPSConnectionPool(host='as.com', port=443): Read timed out. (read timeout=5)
# Hit Rate after finding /futbol: 1.88%
# Hit Rate after finding /resultados: 2.44%
# Hit Rate after finding /resultados/baloncesto: 1.52%
# Request Exception for https://as.com//resultados/2003: HTTPSConnectionPool(host='resultados.as.com', port=443): Read timed out. (read timeout=5)
# Request Exception for https://as.com//resultados/calendar: HTTPSConnectionPool(host='resultados.as.com', port=443): Read timed out. (read timeout=5)
# Hit Rate after finding /resultados/baloncesto/nba: 1.21%
# Hit Rate after finding /resultados/baloncesto/nba/0: 1.34%
# Request Exception for https://as.com//resultados/baloncesto/nba/0/p: HTTPSConnectionPool(host='resultados.as.com', port=443): Read timed out. (read timeout=5)
# Hit Rate after finding /resultados/futbol: 1.82%
#
# Successfully found directories:
# - /homepage
# - /baloncesto
# - /baloncesto/nba
# - /futbol
# - /resultados
# - /resultados/baloncesto
# - /resultados/baloncesto/nba
# - /resultados/baloncesto/nba/0
# - /resultados/futbol
#
# Hit Rate: 2.40%
# Time Taken: 81.97 seconds
#
# Process finished with exit code 0
